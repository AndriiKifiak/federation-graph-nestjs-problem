"""
A pared-down representation of an account, without any privileged data included
GraphMeta: {
 "release": "1.1.0"
}
"""
type AccountBasic {
  """
  ID of the account
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  id: ID!

  """
  Name of the account
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  name: String!
}

"""
Adjustments
GraphMeta: {
 "release": "1.0.0"
}
"""
type Adjustments {
  """
  amount
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  amount: Float!

  """
  currency code
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  currency: String!

  """
  type of adjustment
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  type: String!

  """
  promo code
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  code: String!
}

"""
Filter out shared workspaces that do not have available capacity within the search range
GraphMeta: {
 "release": "1.1.0"
}
"""
input AvailabilityFilterInput {
  """
  RFC3339 formated datestring representing the start of the availability search range
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  startTime: String!

  """
  RFC3339 formatted datestring representing the end of the availability search range
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  endTime: String!
}

"""
Represents a reservation on a bookable resource
GraphMeta: {
 "release": "1.1.0"
}
"""
type Booking {
  """
  ID of the reservation
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  id: ID!

  """
  Time at which the reservation starts, represented as an RFC 3339 date string
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  startTime: String!

  """
  Time at which the reservation ends, represented as an RFC 3339 date string
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  endTime: String!

  """
  Time at which the reservation was created, represented as an RFC 3339 date string
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  createdTime: String!

  """
  Time at which the reservation was updated, represented as an RFC 3339 date string
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  updatedTime: String!

  """
  Time at which the reservation was cancelled, represented as an RFC 3339 date string
  GraphMeta: {
   "release": "1.4.0"
  }
  """
  cancelledTime: String

  """
  The creator of a booking
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  creator: User!

  """
  The owner of a booking
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  owner: User!

  """
  RFC3339 formatted datestring representing the deadline for making modifications to this reservation. After this deadline, the reservation cannot be updated or cancelled.
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  modificationDeadlineTime: String!

  """
  The order associated with the booking
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  order: Order!

  """
  Whether the authenticated user owns this booking
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  isCurrentUsersBooking: Boolean!

  """
  The reservable resource associated with this booking.
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  reservable: ReservableUnion

  """
  The order representing how this booking was paid for. NOTE: Not to be confused with on-demand orders.
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  creditOrder: CreditOrder!
}

"""
BookingCreditUsage (usage) returned by rooms-api
GraphMeta: {
 "release": "1.1.0"
}
"""
type BookingCreditUsage {
  """
  Credit usage on company level (includes upcoming reservation costs for the requested time period)
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  creditsUsed: String!

  """
  How many credits a company has allotted during the requested time period (Best to do 1 month incremenets)
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  creditsAllotted: String!
}

"""Sort order parameters for conference rooms."""
enum BookingSortOrder {
  START
  START_DESC
  FINISH
  FINISH_DESC
  RESERVABLE_TYPE
  RESERVABLE_TYPE_DESC
}

"""
Input for specifying a time range for querying bookings
GraphMeta: {
 "release": "1.5.1"
}
"""
input BookingTimeRange {
  """
  RFC3339 formatted datestring representing the start of the time range.
  GraphMeta: {
   "release": "1.5.1"
  }
  """
  startTime: String!

  """
  RFC3339 formatted datestring representing the end of the time range.
  GraphMeta: {
   "release": "1.5.1"
  }
  """
  endTime: String!
}

"""
Cancel booking result
GraphMeta: {
 "release": "1.4.0"
}
"""
type CancelBookingResult implements MutationResult {
  """
  Represents if this mutation was executed successfully or not
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  isSuccess: Boolean!

  """
  Represents if this mutation was executed successfully or not
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  errors: [MutationError!]

  """
  The booking cancelled by the request
  GraphMeta: {
   "release": "1.4.0"
  }
  """
  result: Booking
}

"""
Cancel fulfillment result
GraphMeta: {
 "release": "1.5.0"
}
"""
type CancelFulfillmentResult implements MutationResult {
  """
  Represents if this mutation was executed successfully or not
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  isSuccess: Boolean!

  """
  Represents if this mutation was executed successfully or not
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  errors: [MutationError!]

  """
  The fulfillment cancelled
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  result: Cancellation
}

"""
The cancellation of a fulfillment made through the Order Service
GraphMeta: {
 "release": "1.1.0"
}
"""
type Cancellation {
  """
  cancellation id
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  id: ID!

  """
  the status of the cancellation
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  status: CancellationStatus!

  """
  more details about the status cancellation
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  statusDetail: [OrderStatusDetail!]!

  """
  the fulfillment id being cancelled
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  fulfillmentId: String!

  """
  the subtotal reimbursement of the cancellation if any
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  subTotal: Money!

  """
  the grand total reimbursement of the cancellation if any
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  grandTotal: Money!

  """
  the taxes associated with the order that was cancelled
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  taxes: [Tax!]!

  """
  The order associated with the cancellation
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  order: Order!
}

"""The status of a given cancellation"""
enum CancellationStatus {
  INITIALIZED
  SUCCEEDED
  FAILED
}

"""
The cancellation status of a fulfillment made through the Order Service
GraphMeta: {
 "release": "1.5.0"
}
"""
type CancellationStatusResponse {
  """
  Cancellation ID
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  id: ID!

  """
  The status of the cancellation
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  status: CancellationStatusResponse!

  """
  More details about the status cancellation
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  statusDetail: [OrderStatusDetail!]!

  """
  The fulfillment ID being cancelled
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  fulfillmentId: String!
}

"""
Conference Room
GraphMeta: {
 "release": "1.0.0"
}
"""
type ConferenceRoom implements Reservable {
  """
  Conference Room uuid
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  id: ID!

  """
  Capacity
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  capacity: Int!

  """
  Location
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  location: Location!

  """
  Product Price
  GraphMeta: {
   "release": "10.0.0"
  }
  """
  productPrice(
    """ProductPriceInput"""
    input: ProductPriceInput!
  ): OrderablePrice!

  """
  Conference Room name
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  name: String!

  """
  StandingCapacity
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  standingCapacity: Int!

  """
  ImageURL
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  imageUrl: String!

  """
  MinIntervalInMinutes
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  minIntervalInMinutes: Int!

  """
  Name of the floor where this room is located
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  floorName: String!

  """
  User facing description of the cancellation policy for this room
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  cancellationPolicy: String!

  """
  OpenTime
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  openTime: String!

  """
  CloseTime
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  closeTime: String!

  """
  Amenity Tags
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  amenities: [ConferenceRoomAmenities!]!

  """
  Credit Mappings
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  creditMappings: [ConferenceRoomCreditMapping!]!

  """
  Operating Hours
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  operatingHours: [Schedule!]!

  """
  Conference Room is private
  GraphMeta: {
   "release": "1.6.2"
  }
  """
  isPrivate: Boolean!
}

"""
Conference Room Amenities
GraphMeta: {
 "release": "1.0.0"
}
"""
type ConferenceRoomAmenities {
  """
  Amenity ID
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  id: ID!

  """
  Amenity name
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  displayName: String!
}

"""
Conference Room Credit Mapping
GraphMeta: {
 "release": "1.0.0"
}
"""
type ConferenceRoomCreditMapping {
  """
  TODO
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  time: String!

  """
  TODO
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  credits: String!
}

"""
ConferenceRoomItem
GraphMeta: {
 "release": "1.0.0"
}
"""
type ConferenceRoomItem implements Orderable {
  """
  startTime
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  startTime: String!

  """
  endTime
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  endTime: String!

  """
  quantity
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  quantity: Int!

  """
  subTotal
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  subTotal: Money!

  """
  grandTotal
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  grandTotal: Money!

  """
   promo code adjustments
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  adjustments: [Adjustments!]

  """
   taxes
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  taxes: [Tax!]

  """
  fulfillmentId
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  fulfillmentId: ID

  """
  The conference room for the quote
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  conferenceRoom: ConferenceRoom!
}

"""
Lat-Long coordinate pair
GraphMeta: {
 "release": "1.0.0"
}
"""
input Coordinate {
  """
  latitude
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  latitude: String!

  """
  longitude
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  longitude: String!
}

"""
Create booking result
GraphMeta: {
 "release": "1.4.0"
}
"""
type CreateBookingResult implements MutationResult {
  """
  Represents if this mutation was executed successfully or not
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  isSuccess: Boolean!

  """
  Represents if this mutation was executed successfully or not
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  errors: [MutationError!]

  """
  The booking created by requesting a booking
  GraphMeta: {
   "release": "1.4.0"
  }
  """
  result: Booking
}

"""
Represents a reservation on a bookable resource.
GraphMeta: {
 "release": "1.1.0"
}
"""
type CreatedOrder {
  """
  order id
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  id: ID!

  """
  the status of the order
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  status: OrderStatus!
}

"""
Represents a reservation on a bookable resource.
GraphMeta: {
 "release": "1.0.0"
}
"""
type CreatedQuote {
  """
  quote uuid
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  id: ID!

  """
  quote status
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  status: QuoteStatus!
}

"""
Represents the payment for a booking
GraphMeta: {
 "release": "1.1.0"
}
"""
type CreditOrder {
  """
  Number of credits charged
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  price: String!

  """
  A pared-down representation of the account to which the order was charged, without any privileged data included
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  chargedTo: AccountBasic!
}

"""
Wrapper for the doCancelBooking mutation
GraphMeta: {
 "release": "1.4.0"
}
"""
input DoCancelBookingInput {
  """
  The UUID of the booking resource
  GraphMeta: {
   "release": "1.4.0"
  }
  """
  id: ID!

  """
  The number of credits to refund
  GraphMeta: {
   "release": "1.4.0"
  }
  """
  credits: Int

  """
  Notes to add to the cancellation
  GraphMeta: {
   "release": "1.4.0"
  }
  """
  notes: String

  """
  The reservation cancellation reason to association this cancellation with
  GraphMeta: {
   "release": "1.4.0"
  }
  """
  reasonId: String
}

"""
Cancel fulfillment input params
GraphMeta: {
 "release": "1.5.0"
}
"""
input DoCancelFulfillmentInput {
  """
  Fulfillment ID to cancel
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  fulfillmentId: String!

  """
  User ID who is cancelling this fulfillment
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  requesterId: String!
}

"""
Wrapper for the doCreateBooking mutation
GraphMeta: {
 "release": "1.4.0"
}
"""
input DoCreateBookingInput {
  """
  The UUID of the reservable resource
  GraphMeta: {
   "release": "1.4.0"
  }
  """
  reservableId: ID!

  """
  The type of reservable
  GraphMeta: {
   "release": "1.4.0"
  }
  """
  type: ReservableType!

  """
  The UUID of the account this booking should be charged to
  GraphMeta: {
   "release": "1.4.0"
  }
  """
  chargedToAccountId: ID!

  """
  RFC3339 formatted datestring representing the start of the booking period
  GraphMeta: {
   "release": "1.4.0"
  }
  """
  startTime: String!

  """
  RFC3339 formatted datestring representing the end of the booking period
  GraphMeta: {
   "release": "1.4.0"
  }
  """
  endTime: String!
}

"""
Input for EditInventoryPermissions mutation
GraphMeta: {
 "release": "10.0.0"
}
"""
input DoEditInventoryPermissionsInput {
  """
  The uuid of the reservable
  GraphMeta: {
   "release": "10.0.0"
  }
  """
  id: ID!
}

"""
TODO
GraphMeta: {
 "release": "10.0.0"
}
"""
input DoEditScheduleInput {
  """
  The uuid of the reservable
  GraphMeta: {
   "release": "10.0.0"
  }
  """
  id: ID!

  """
  The weekly schedule to change to
  GraphMeta: {
   "release": "10.0.0"
  }
  """
  weeklySchedule: [WeeklySchedule!]!
}

"""
Place Order Input params
GraphMeta: {
 "release": "1.1.0"
}
"""
input DoPlaceOrderInput {
  """
  The order placer's account - generally the company a member belongs to
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  accountId: ID

  """
  The payment method - eg corresponding to a credit card on file, etc
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  paymentProfileId: ID

  """
  The quote to base this order on. Quote must have status of READY to successfully place an order
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  quoteId: ID

  """
  The person making the order. Usually the same as the user, but not always
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  requesterId: ID

  """
  The user who will be receiving or using the ordered products
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  userId: ID
}

"""
request quote input
GraphMeta: {
 "release": "1.0.0"
}
"""
input DoRequestQuoteInput {
  """
  currency code
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  currency: String!

  """
  items being ordered
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  lineItems: [QuoteLineItem!]!

  """
   The userId that the quote is being made for
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  userId: ID!

  """
   The user membership uuid of the user in which the quote is being made for
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  userMembershipId: ID
}

"""
Wrapper for the doUpdateBooking mutation
GraphMeta: {
 "release": "1.4.0"
}
"""
input DoUpdateBookingInput {
  """
  The UUID of the reservation
  GraphMeta: {
   "release": "1.4.0"
  }
  """
  id: ID!

  """
  RFC3339 formatted datestring representing the start of the booking period
  GraphMeta: {
   "release": "1.4.0"
  }
  """
  startTime: String

  """
  RFC3339 formatted datestring representing the end of the booking period
  GraphMeta: {
   "release": "1.4.0"
  }
  """
  endTime: String

  """
  Additional notes to add to the booking
  GraphMeta: {
   "release": "1.4.0"
  }
  """
  notes: String
}

"""
Edit inventory permissions result
GraphMeta: {
 "release": "10.0.0"
}
"""
type EditInventoryPermissionsResult implements MutationResult {
  """
  Represents if this mutation was executed successfully or not
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  isSuccess: Boolean!

  """
  Represents if this mutation was executed successfully or not
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  errors: [MutationError!]
}

"""
Edit schedule result
GraphMeta: {
 "release": "10.0.0"
}
"""
type EditScheduleResult implements MutationResult {
  """
  Represents if this mutation was executed successfully or not
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  isSuccess: Boolean!

  """
  Represents if this mutation was executed successfully or not
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  errors: [MutationError!]
}

"""
Wrapper for getAvailableInventory query
GraphMeta: {
 "release": "1.0.0"
}
"""
input GetConferenceRoomsInput {
  """
  roomsFilter input
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  filter: RoomsFilterInput!

  """
  pagination input
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  pagination: PaginationInput!

  """
  sort order input
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  sortOrder: [RoomSortOrder!]!
}

"""
GetConferenceRoomsResponse
GraphMeta: {
 "release": "1.6.2"
}
"""
type GetConferenceRoomsResponse {
  """
  The conference rooms resulting from the query
  GraphMeta: {
   "release": "1.6.2"
  }
  """
  conferenceRooms: [ConferenceRoom!]!

  """
  Total number of results that can be returned
  GraphMeta: {
   "release": "1.6.2"
  }
  """
  totalCount: Int!
}

"""
Wrapper for getGlobalAvailableInventory query
GraphMeta: {
 "release": "10.0.0"
}
"""
input GetGlobalAvailableInventoryInput {
  """
  timeRange
  GraphMeta: {
   "release": "10.0.0"
  }
  """
  timeRange: BookingTimeRange!

  """
  locationIds
  GraphMeta: {
   "release": "10.0.0"
  }
  """
  locationIds: [ID!]!
}

"""
Accepted filter options for searching locations by room/space info
GraphMeta: {
 "release": "1.5.0"
}
"""
input GetLocationsByReservableFilterInput {
  """
  The type of reservable space to base other filter criteria on. Defaults to conference rooms
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  reservableType: ReservableType

  """
  Only return a subset of locations within this list
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  locationIds: [ID!]

  """
  The date/time at which spaces at the location should be accessible. RFC3339 formatted date string
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  accessibleOn: String

  """
  The minimum capacity of at least one space at the location; capacity in at least one space should be greater than or equal to this number
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  capacityMinimum: Float

  """
  The amenity tags that should match at least one space at the location. The tags match using an OR logic
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  amenities: [String!]

  """
  The time that at least one space should be available in the location
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  timeAvailable: TimeFilterInput

  """
  Point in geospatial coordinates which the location must be near
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  nearby: NearbyFilterInput

  """
  Ensures that at least one reservable space at the location is bookable by the given membership type
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  userMembershipId: String

  """
  Pagination info. Defaults to 0 offset and 50 limit.
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  pagination: PaginationInput
}

"""
Input for MyBookingCreditUsage query
GraphMeta: {
 "release": "1.0.0"
}
"""
input GetMyBookingCreditUsageInput {
  """
  Account ID of the user (generally is the same as company ID)
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  accountId: ID!

  """
  An RFC3339 formatted date string used to scope credit spend.
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  startTime: String!

  """
  An RFC3339 formatted date string used to scope credit spend.
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  endTime: String!
}

"""
PastBookingsInput
GraphMeta: {
 "release": "1.1.0"
}
"""
input GetPastBookingsInput {
  """
  Filter bookings by owner
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  ownerId: ID!

  """
  The type of reservable this reservation was created for
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  reservableType: ReservableType

  """
  The user membership uuid the booking was made under
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  userMembershipId: ID

  """
  RFC3339 formatted datestring representing the beginning of the search range.
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  finishingBeforeTime: String!

  """
  pagination input
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  pagination: PaginationInput!

  """
  sort order input
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  sortOrder: [BookingSortOrder!]!
}

"""
GetPrivateAccessAreasInput
GraphMeta: {
 "release": "1.5.0"
}
"""
input GetPrivateAccessAreasInput {
  """
  filter for result set
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  filter: PrivateAccessAreaFilterInput!

  """
  pagination input
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  pagination: PaginationInput!

  """
  sort order input
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  sortOrder: [PrivateAccessAreaSortOrder!]
}

"""
GetPrivateAccessAreasResponse
GraphMeta: {
 "release": "1.5.0"
}
"""
type GetPrivateAccessAreasResponse {
  """
  The private access areas resulting from the query
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  offices: [PrivateAccessArea!]!

  """
  Total number of results that can be returned
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  totalCount: Int!
}

"""
GetPrivateOfficesInput
GraphMeta: {
 "release": "1.1.0"
}
"""
input GetPrivateOfficesInput {
  """
  filter for result set
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  filter: PrivateOfficeFilterInput!

  """
  pagination input
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  pagination: PaginationInput!

  """
  sort order input
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  sortOrder: [PrivateOfficeSortOrder!]
}

"""
GetPrivateOfficesResponse
GraphMeta: {
 "release": "1.1.0"
}
"""
type GetPrivateOfficesResponse {
  """
  The private offices resulting from the query
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  offices: [PrivateOffice!]!

  """
  Total number of results that can be returned
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  totalCount: Int!
}

"""
Input for querying reservation schedule by ID and time range
GraphMeta: {
 "release": "1.5.0"
}
"""
input GetReservationScheduleInput {
  """
  ID of the reservable resource
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  reservableId: ID!

  """
  The type of reservable
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  type: ReservableType!

  """
  Only show reservations within this range
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  timeRange: BookingTimeRange!
}

"""
SharedWorkspacesInput
GraphMeta: {
 "release": "1.1.0"
}
"""
input GetSharedWorkspacesInput {
  """
  filter for result set
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  filter: SharedWorkspaceFilterInput!

  """
  pagination input
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  pagination: PaginationInput!

  """
  sort order input
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  sortOrder: [SharedWorkspaceSortOrder!]
}

"""
GetSharedWorkspacesResponse
GraphMeta: {
 "release": "1.1.0"
}
"""
type GetSharedWorkspacesResponse {
  """
  The shared workspaces resulting from the query
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  workspaces: [SharedWorkspace!]!

  """
  Total number of results that can be returned
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  totalCount: Int!
}

"""
UpcomingBookingsInput
GraphMeta: {
 "release": "1.1.0"
}
"""
input GetUpcomingBookingsInput {
  """
  Filter bookings by owner
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  ownerId: ID!

  """
  RFC3339 formatted datestring. If provided, query will filter bookings that finish after this date
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  finishingAfterTime: String!

  """
  The type of reservable this reservation was created for
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  reservableType: ReservableType

  """
  The user membership uuid the booking was made under
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  userMembershipId: ID

  """
  pagination input
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  pagination: PaginationInput!

  """
  sort order input
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  sortOrder: [BookingSortOrder!]!
}

"""Line item types"""
enum LineItemEnum {
  SHARED_WORKSPACE
  CONFERENCE_ROOM
}

"""
WeWork Location basic attributes
GraphMeta: {
 "release": "1.0.0"
}
"""
type Location @key(fields: "id") @extends {
  """
  Location UUID
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  id: ID! @external

  """
  Metadata about reservable within this location
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  reservableMetadata: ReservableMetadata
}

"""
Money type for expressing currency amounts.
GraphMeta: {
 "release": "1.0.0"
}
"""
type Money {
  """
  currency code
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  currency: String!

  """
  amount
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  amount: Float!
}

type Mutation {
  """
  TODO
  GraphMeta: {
   "release": "10.0.0",
   "acceptedTokenTypes": "member"
  }
  """
  doEditInventoryPermissions(
    """TODO"""
    doEditInventoryPermissionsInput: DoEditInventoryPermissionsInput!
  ): EditInventoryPermissionsResult!

  """
  TODO
  GraphMeta: {
   "release": "10.0.0",
   "acceptedTokenTypes": "member"
  }
  """
  doEditSchedule(
    """TODO"""
    doEditScheduleInput: DoEditScheduleInput!
  ): EditScheduleResult!

  """
  Creates a booking
  GraphMeta: {
   "release": "1.4.0",
   "acceptedTokenTypes": "member"
  }
  """
  doCreateBooking(
    """Create a new booking"""
    doCreateBookingInput: DoCreateBookingInput!
  ): CreateBookingResult!

  """
  Cancels the booking
  GraphMeta: {
   "release": "1.4.0",
   "acceptedTokenTypes": "member"
  }
  """
  doCancelBooking(
    """Cancel a booking"""
    doCancelBookingInput: DoCancelBookingInput!
  ): CancelBookingResult!

  """
  Updates the booking with new notes, start time, and/or end time
  GraphMeta: {
   "release": "1.4.0",
   "acceptedTokenTypes": "member"
  }
  """
  doUpdateBooking(
    """Update a booking"""
    doUpdateBookingInput: DoUpdateBookingInput!
  ): UpdateBookingResult!

  """
  Place a new order
  GraphMeta: {
   "release": "1.1.0",
   "acceptedTokenTypes": "member"
  }
  """
  doPlaceOrder(
    """Place order input"""
    doPlaceOrderInput: DoPlaceOrderInput!
  ): PlaceOrderResult!

  """
  Cancel an existing fulfillment
  GraphMeta: {
   "release": "1.5.0",
   "acceptedTokenTypes": "member"
  }
  """
  doCancelFulfillment(
    """Cancel fulfillment input"""
    input: DoCancelFulfillmentInput!
  ): CancelFulfillmentResult!

  """
  Request a quote
  GraphMeta: {
   "release": "1.0.0",
   "acceptedTokenTypes": "member"
  }
  """
  doRequestQuote(
    """Do request quote input"""
    doRequestQuoteInput: DoRequestQuoteInput!
  ): RequestQuoteResult!
}

"""
Represents an error that may have occurred during this mutation
GraphMeta: {
 "release": "1.0.0"
}
"""
type MutationError {
  """
  The error message
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  message: String!

  """
  The error code representing this error
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  code: String

  """
  Represents which system this error originated from
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  service: String

  """
  Shows more details of the error, such as what field is at error state and what is the issue
  GraphMeta: {
   "release": "1.6.0"
  }
  """
  details: String
}

"""Represents the result of a mutation"""
interface MutationResult {
  """
  Represents if this mutation was executed successfully or not
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  isSuccess: Boolean!

  """
  Represents if this mutation was executed successfully or not
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  errors: [MutationError!]
}

"""
NearbyFilterInput
GraphMeta: {
 "release": "1.0.0"
}
"""
input NearbyFilterInput {
  """
  Latitude, longitude coordinates (in that order, separated by a comma) for filtering nearby rooms around this point.
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  center: Coordinate!

  """
  Filter's spaces based on a radius. Unit is in km.
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  radius: Int!
}

"""
an order resource
GraphMeta: {
 "release": "1.1.0"
}
"""
type Order {
  """
  order id
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  id: ID!

  """
  the status of the order
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  status: OrderStatus!

  """
  gives more details in regards to the status of the order
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  statusDetail: String

  """
  The status details for the order
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  statusDetails: [OrderStatusDetail!]!

  """
  accountId
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  accountId: String!

  """
  payment profile id
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  paymentProfileId: String!

  """
   order line items
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  lineItems: [OrderableUnion!]!

  """
  quote grand total that includes taxes
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  grandTotal: Money!

  """
  quote subtotal that excludes taxes
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  subTotal: Money!

  """
  promo code adjustments
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  adjustments: [Adjustments!]!

  """
  taxes
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  taxes: [Tax!]!

  """
  user action details
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  userActionDetails: [UserActionDetail!]
}

"""A type that can be quoted and booked"""
interface Orderable {
  """
  startTime
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  startTime: String!

  """
  endTime
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  endTime: String!

  """
  quantity
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  quantity: Int!

  """
  subTotal
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  subTotal: Money!

  """
  grandTotal
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  grandTotal: Money!

  """
   promo code adjustments
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  adjustments: [Adjustments!]

  """
   taxes
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  taxes: [Tax!]

  """
  fulfillmentId
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  fulfillmentId: ID
}

"""
OrderablePrice
GraphMeta: {
 "release": "10.0.0"
}
"""
type OrderablePrice {
  """
  Price id
  GraphMeta: {
   "release": "10.0.0"
  }
  """
  id: ID!

  """
  Product id
  GraphMeta: {
   "release": "10.0.0"
  }
  """
  productId: ID!

  """
  Money amount for the orderable
  GraphMeta: {
   "release": "10.0.0"
  }
  """
  price: Money!

  """
  Time unit for the money amount of the price.
  GraphMeta: {
   "release": "10.0.0"
  }
  """
  rateUnit: TimeUnit!
}

union OrderableUnion = SharedWorkspaceItem | ConferenceRoomItem

"""Status of the order"""
enum OrderStatus {
  PLACED
  FULFILLED
  CANCELLED
  REJECTED
  EXPIRED
  AWAITING_USER_ACTION
}

"""
Order status details
GraphMeta: {
 "release": "1.0.0"
}
"""
type OrderStatusDetail {
  """
   status code
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  statusCode: Int!

  """
   errorCode
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  errorCode: String!

  """
   message
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  message: String!

  """
   source
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  source: String!
}

"""
Common pagination input type
GraphMeta: {
 "release": "1.0.0"
}
"""
input PaginationInput {
  """
  Number of elements to skip over when determining the start of a page.
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  offset: Int

  """
  Number of elements in a page
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  limit: Int
}

"""
Place order result
GraphMeta: {
 "release": "1.1.0"
}
"""
type PlaceOrderResult implements MutationResult {
  """
  Represents if this mutation was executed successfully or not
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  isSuccess: Boolean!

  """
  Represents if this mutation was executed successfully or not
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  errors: [MutationError!]

  """
  The order created
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  result: CreatedOrder
}

"""
Private Access Area
GraphMeta: {
 "release": "1.5.0"
}
"""
type PrivateAccessArea implements Reservable {
  """
  Private Access Area UUID
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  id: ID!

  """
  Capacity
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  capacity: Int!

  """
  Location
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  location: Location!

  """
  Product Price
  GraphMeta: {
   "release": "10.0.0"
  }
  """
  productPrice(
    """ProductPriceInput"""
    input: ProductPriceInput!
  ): OrderablePrice!

  """
  Private Access Area name
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  name: String!

  """
  Nickname
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  nickname: String

  """
  Image URL
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  imageUrl: String!

  """
  The maximum number of concurrent reservations at any given time
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  maxBookable: Int!

  """
  Name of the floor where this private access area is located
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  floorName: String!

  """
  Open time
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  openTime: String!

  """
  Close time
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  closeTime: String!

  """
  Amenity Tags
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  amenities: [PrivateAccessAreaAmenities!]!

  """
  Operating hours
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  operatingHours: [Schedule!]!
}

"""
Private Access Area Amenities
GraphMeta: {
 "release": "1.5.0"
}
"""
type PrivateAccessAreaAmenities {
  """
  Amenity ID
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  id: ID!

  """
  Amenity name
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  displayName: String!
}

"""
Filter parameters for querying private access areas
GraphMeta: {
 "release": "1.5.0"
}
"""
input PrivateAccessAreaFilterInput {
  """
  Specify the date on which to search
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  accessibleOn: String!

  """
  Narrow results to private access areas matching the given UUIDs
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  ids: [String!]

  """
  Narrow results to private access areas in buildings with the given location UUIDs
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  locationIds: [String!]

  """
  Narrow results to private access areas with a capacity greater than or equal to this value
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  capacityGTE: Int

  """
  Filter out private access areas that do not have availability within the search range
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  availableBetween: AvailabilityFilterInput

  """
  Narrow results to private access areas in a particular geolocation. If using this parameter, omit location UUIDs
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  nearbyFilter: PrivateAccessAreaNearbyFilter

  """
  Filter out private access areas by the membership type of the user membership UUID
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  userMembershipId: String
}

"""
Input for querying private access areas by location
GraphMeta: {
 "release": "1.5.0"
}
"""
input PrivateAccessAreaNearbyFilter {
  """
  The center of the search.
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  center: Coordinate!

  """
  The radius of the search area in kilometers.
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  radius: Int!
}

"""Sort order parameters for private access areas"""
enum PrivateAccessAreaSortOrder {
  FLOOR_NUMBER
  NAME
  DISTANCE
}

"""
Private Office
GraphMeta: {
 "release": "1.1.0"
}
"""
type PrivateOffice implements Reservable {
  """
  Private Office uuid
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  id: ID!

  """
  Capacity
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  capacity: Int!

  """
  Location
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  location: Location!

  """
  Product Price
  GraphMeta: {
   "release": "10.0.0"
  }
  """
  productPrice(
    """ProductPriceInput"""
    input: ProductPriceInput!
  ): OrderablePrice!

  """
  Private Office name
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  name: String!

  """
  ImageURL
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  imageUrl: String!

  """
  Name of the floor where this office is located
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  floorName: String!

  """
  Open time
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  openTime: String! @deprecated(reason: "Data not available")

  """
  Close time
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  closeTime: String! @deprecated(reason: "Data not available")

  """
  Amenity Tags
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  amenities: [PrivateOfficeAmenities!]!

  """
  Operating Hours
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  operatingHours: [Schedule!]!
}

"""
Private Office Amenities
GraphMeta: {
 "release": "1.1.0"
}
"""
type PrivateOfficeAmenities {
  """
  Amenity ID
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  id: ID!

  """
  Amenity name
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  displayName: String!
}

"""
Filter parameters for querying private office.
GraphMeta: {
 "release": "1.1.0"
}
"""
input PrivateOfficeFilterInput {
  """
  Specify the date on which to search
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  accessibleOn: String!

  """
  Narrow results to private office matching the given uuids.
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  ids: [String!]

  """
  Narrow results to private office in buildings with the given locationUUIDs.
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  locationIds: [String!]

  """
  Narrow results to private office with a capacity greater than this value.
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  capacityGTE: Int

  """
  Filter out shared workspaces that do not have availability within the search range
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  availableBetween: AvailabilityFilterInput

  """
  Narrow results to private office in a particular geolocation. If using this parameter, omit locationUUIDs.
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  nearbyFilter: PrivateOfficeNearbyFilter

  """
  Filter out private office by the membership type of the user membership uuid
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  userMembershipId: String
}

"""
Input for querying private office by location.
GraphMeta: {
 "release": "1.1.0"
}
"""
input PrivateOfficeNearbyFilter {
  """
  The center of the search.
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  center: Coordinate!

  """
  The radius of the search area in kilometers.
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  radius: Int!
}

"""Sort order parameters for private offices."""
enum PrivateOfficeSortOrder {
  FLOOR_NUMBER
  NAME
  DISTANCE
}

"""
account information required to return the correct local price
GraphMeta: {
 "release": "10.0.0"
}
"""
input ProductPriceInput {
  """
  the ID of the member associated with the account
  GraphMeta: {
   "release": "10.0.0"
  }
  """
  userId: ID!

  """
  the ID of the membership
  GraphMeta: {
   "release": "10.0.0"
  }
  """
  userMembershipId: ID!

  """
  the account ID
  GraphMeta: {
   "release": "10.0.0"
  }
  """
  accountId: ID!
}

type Query {
  """
  Find available inventory for the locations
  GraphMeta: {
   "release": "10.0.0",
   "acceptedTokenTypes": "member"
  }
  """
  getGlobalAvailableInventoryInput(
    """TODO"""
    getGlobalAvailableInventoryInput: GetGlobalAvailableInventoryInput!
  ): Reservable!

  """
  This query should not appear in the schema because it should be filtered by the feature flag.
  GraphMeta: {
   "release": "10.0.0",
   "acceptedTokenTypes": "member"
  }
  """
  testFeatureFlagging: EditInventoryPermissionsResult!

  """
  bookingCreditUsage
  GraphMeta: {
   "release": "1.1.0",
   "acceptedTokenTypes": "member"
  }
  """
  getMyBookingCreditUsage(
    """getMyBookingCreditUsageInput"""
    getMyBookingCreditUsageInput: GetMyBookingCreditUsageInput!
  ): BookingCreditUsage!

  """
  Returns a single booking by UUID
  GraphMeta: {
   "release": "1.1.0",
   "acceptedTokenTypes": "member"
  }
  """
  getBooking(
    """id of the booking to retrieve"""
    id: String!
  ): Booking!

  """
  Returns the list of all upcoming bookings for a user
  GraphMeta: {
   "release": "1.1.0",
   "acceptedTokenTypes": "member"
  }
  """
  getUpcomingBookings(
    """Get all upcoming bookings"""
    upcomingBookingsInput: GetUpcomingBookingsInput!
  ): [Booking!]!

  """
  Returns the list of all past bookings for a user
  GraphMeta: {
   "release": "1.1.0",
   "acceptedTokenTypes": "member"
  }
  """
  getPastBookings(
    """input that determines which bookings to filter out"""
    input: GetPastBookingsInput!
  ): [Booking!]!

  """
  Returns all bookings on a resource in the time range
  GraphMeta: {
   "release": "1.5.0",
   "acceptedTokenTypes": "member"
  }
  """
  getReservationSchedule(
    """Input that determines which reservable to return within a time range"""
    input: GetReservationScheduleInput!
  ): [ReservationSchedule!]!

  """
  Returns the list of conference rooms
  GraphMeta: {
   "release": "1.0.0",
   "acceptedTokenTypes": [
    "member",
    "employee"
   ]
  }
  """
  getConferenceRooms(
    """getConferenceRoomsInput with filter, pagination options, and sorts."""
    input: GetConferenceRoomsInput!
  ): GetConferenceRoomsResponse!

  """
  Get a particular conference room by id
  GraphMeta: {
   "release": "1.4.0",
   "acceptedTokenTypes": [
    "member",
    "employee"
   ]
  }
  """
  getConferenceRoomById(
    """The id for the conference room"""
    id: String!
  ): ConferenceRoom!

  """
  Returns the list of private offices
  GraphMeta: {
   "release": "1.1.0",
   "acceptedTokenTypes": [
    "member",
    "employee"
   ]
  }
  """
  getPrivateOffices(
    """input args for pagination and filtering"""
    input: GetPrivateOfficesInput!
  ): GetPrivateOfficesResponse!

  """
  Returns the list of shared workspaces
  GraphMeta: {
   "release": "1.1.0",
   "acceptedTokenTypes": [
    "member",
    "employee"
   ]
  }
  """
  getSharedWorkspaces(
    """input args for pagination and filtering"""
    input: GetSharedWorkspacesInput!
  ): GetSharedWorkspacesResponse!

  """
  Returns the specified shared workspace by id
  GraphMeta: {
   "release": "1.4.0",
   "acceptedTokenTypes": [
    "member",
    "employee"
   ]
  }
  """
  getSharedWorkspaceById(
    """ID of the shared workspace"""
    id: String!
  ): SharedWorkspace!

  """
  Returns the list of private access areas
  GraphMeta: {
   "release": "1.5.0",
   "acceptedTokenTypes": [
    "member",
    "employee"
   ]
  }
  """
  getPrivateAccessAreas(
    """input args for pagination and filtering"""
    input: GetPrivateAccessAreasInput!
  ): GetPrivateAccessAreasResponse!

  """
  Get cancellations for provided order ids
  GraphMeta: {
   "release": "1.1.0",
   "acceptedTokenTypes": "member"
  }
  """
  getCancellations(
    """Ids to look up cancellations by"""
    input: [ID!]!
  ): [Cancellation!]!

  """
  Get orders by provided order ids
  GraphMeta: {
   "release": "1.1.0",
   "acceptedTokenTypes": "member"
  }
  """
  getOrders(
    """Ids to look up orders by"""
    ids: [ID!]!
  ): [Order!]!

  """
  Find available inventory for the user
  GraphMeta: {
   "release": "1.0.0",
   "acceptedTokenTypes": "member"
  }
  """
  pollQuote(
    """Do request quote input"""
    quoteId: ID!
  ): CreatedQuote!

  """
  Retrieves the quote by quote id, including the details.
  GraphMeta: {
   "release": "1.0.0",
   "acceptedTokenTypes": "member"
  }
  """
  getQuote(
    """Do request quote input"""
    quoteId: ID!
  ): ReadyQuote!

  """
  Query for locations by information about the spaces (e.g. conference rooms, private offices, bookable spaces)available at those locations
  GraphMeta: {
   "release": "1.5.0",
   "acceptedTokenTypes": [
    "member",
    "employee"
   ]
  }
  """
  getLocationsByReservableFilter(
    """Filter to use for query"""
    input: GetLocationsByReservableFilterInput!
  ): [Location!]!
}

"""
Quote line item input
GraphMeta: {
 "release": "1.0.0"
}
"""
input QuoteLineItem {
  """
   rooms or workspace uuid
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  inventoryId: ID!

  """
   item type
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  lineItemType: LineItemEnum!

  """
   start time
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  startTime: String!

  """
   end time
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  endTime: String!

  """
   quantity
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  quantity: Int!

  """
   promo code
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  promoCode: String
}

"""Quote statuses"""
enum QuoteStatus {
  INITIALIZED
  READY
  ACCEPTED
  DECLINED
  INVALIDATED
  EXPIRED
}

"""
Represents a quote for a reservation on a bookable resource.
GraphMeta: {
 "release": "1.0.0"
}
"""
type ReadyQuote {
  """
  quote id
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  id: ID!

  """
  quote status
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  status: QuoteStatus!

  """
  quote status details
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  statusDetails: [OrderStatusDetail!]!

  """
  quote expiry
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  expiry: String!

  """
  quote line items
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  lineItems: [OrderableUnion!]!

  """
  quote grand total that includes taxes
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  grandTotal: Money!

  """
  quote subtotal that excludes taxes
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  subTotal: Money!

  """
  promo code adjustments
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  adjustments: [Adjustments!]!

  """
  taxes
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  taxes: [Tax!]!
}

"""
Create booking result
GraphMeta: {
 "release": "1.0.0"
}
"""
type RequestQuoteResult implements MutationResult {
  """
  Represents if this mutation was executed successfully or not
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  isSuccess: Boolean!

  """
  Represents if this mutation was executed successfully or not
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  errors: [MutationError!]

  """
  The quote created by requesting a booking
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  result: CreatedQuote
}

"""An interface for a reservable resource"""
interface Reservable {
  """
  The uuid of the reservable
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  id: ID!

  """
  The total capacity of the reservable
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  capacity: Int!

  """
  The location of this reservable
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  location: Location!

  """
  Product Price
  GraphMeta: {
   "release": "10.0.0"
  }
  """
  productPrice(
    """ProductPriceInput"""
    input: ProductPriceInput!
  ): OrderablePrice!
}

"""
Metadata about conference rooms within a location
GraphMeta: {
 "release": "1.5.0"
}
"""
type ReservableMetadata {
  """
  The local policy for cancelling a booked desk. Text is translated based on the member's locale
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  dailyDeskCancellationPolicy: String

  """
  The local policy for cancelling a conference room. Text is translated based on the member's locale
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  conferenceRoomCancellationPolicy: String

  """
  A count of conference rooms in a location
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  conferenceRoomCount: Float @deprecated(reason: "To be replaced with a dedicated query")

  """
  A count of bookable spaces in a location (e.g. desks)
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  bookableSpaceCount: Float @deprecated(reason: "To be replaced with dedicated queries")
}

"""Enum representing the type of a reservable."""
enum ReservableType {
  CONFERENCE_ROOM
  DAILY_DESK
  PRIVATE_OFFICE
  COMMON_SPACE
  SHARED_WORKSPACE @deprecated(reason: "Replaced with DAILY_DESK")
  PRIVATE_ACCESS_AREA
}

union ReservableUnion = ConferenceRoom | SharedWorkspace | PrivateOffice | PrivateAccessArea

"""
Represents a reservation schedule on a bookable resource
GraphMeta: {
 "release": "1.5.0"
}
"""
type ReservationSchedule {
  """
  RFC3339 formatted datestring representing the start time of the reservation
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  startTime: String!

  """
  RFC3339 formatted datestring representing the end time of the reservation
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  endTime: String!

  """
  True if the bearer token used to make this request matches the user this booking was made for
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  isCurrentUsersBooking: Boolean!
}

"""
Wrapper for Rooms query filter
GraphMeta: {
 "release": "1.0.0"
}
"""
input RoomsFilterInput {
  """
  ConferenceRooms (and other reservables) are accessible or not based on the user context and the date. The accessibleOn filter provides the "date" input for this permission system.
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  accessibleOn: String!

  """
  ids
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  ids: [ID!]

  """
  Filters spaces by their location_uuid
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  locationIds: [ID!]

  """
  Restrict the capacity to greater than or equal to this value.
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  capacityGte: Int

  """
  Restrict the capacity to less than or equal to this value.
  GraphMeta: {
   "release": "1.5.0"
  }
  """
  capacityLte: Int

  """
  List containing amenity tags. Available Options: whiteboard, phone, tv. Passing both whiteboard and phone will return rooms that have at least both of these amenities
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  amenities: [String!]

  """
  timeFilter
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  timeFilter: TimeFilterInput

  """
  nearbyFilter
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  nearbyFilter: NearbyFilterInput

  """
  Filters conference rooms by membership_context_type for the user_membership_uuid and logged in user.
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  userMembershipId: ID
}

"""Sort order parameters for conference rooms."""
enum RoomSortOrder {
  FLOOR_NUMBER
  NAME
  DISTANCE
}

"""
Reservable Schedule
GraphMeta: {
 "release": "1.1.0"
}
"""
type Schedule {
  """
  day of the week
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  day: String!

  """
  opening time
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  openTime: String!

  """
  closing time
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  closeTime: String!
}

"""
A shared workspace area
GraphMeta: {
 "release": "1.1.0"
}
"""
type SharedWorkspace implements Reservable {
  """
  id
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  id: ID!

  """
  The total capacity of this shared workspace
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  capacity: Int!

  """
  The location of this shared workspace
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  location: Location!

  """
  Product Price
  GraphMeta: {
   "release": "10.0.0"
  }
  """
  productPrice(
    """ProductPriceInput"""
    input: ProductPriceInput!
  ): OrderablePrice!

  """
  Image URL
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  imageUrl: String!

  """
  Header Image URL
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  headerImageUrl: String!

  """
  The number of credits required to book this shared workspace
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  credits: Int!

  """
  The open time for this shared workspace in the format HH:mm
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  openTime: String!

  """
  The close time for this shared workspace in the format HH:mm
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  closeTime: String!

  """
  The cancellation policy
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  cancellationPolicy: String!

  """
  Operating Hours
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  operatingHours: [Schedule!]!

  """
  The number of shared workspace seats available at this location
  GraphMeta: {
   "release": "1.4.0"
  }
  """
  seatsAvailable(
    """
    The datetime for which you want to inquire how many seats are available. Use ISO formatted DateTimes and IANA timezones to prevent surprises.
    """
    date: String!
  ): Int! @deprecated(reason: "Replaced with 'seats' in release 1.7.0")

  """
  Number of available and total seats for a given date
  GraphMeta: {
   "release": "1.7.0"
  }
  """
  seats(
    """
    Date for which to get seat availability, represented as an RFC 3339 date string (e.g., '2022-06-01')
    """
    date: String!
  ): SharedWorkspaceSeats!
}

"""
Filter for querying shared workspaces
GraphMeta: {
 "release": "1.1.0"
}
"""
input SharedWorkspaceFilterInput {
  """
  Specify the date on which to search
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  accessibleOn: String!

  """
  Filter to a specific market uuid
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  marketId: ID

  """
  Filter to specific location uuids
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  locationIds: [ID!]

  """
  Filter out shared workspaces that do not have availability within the search range
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  availableBetween: AvailabilityFilterInput

  """
  Filter out shared workspaces by the membership type of the user membership uuid
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  userMembershipId: ID
}

"""
SharedWorkspaceItem
GraphMeta: {
 "release": "1.0.0"
}
"""
type SharedWorkspaceItem implements Orderable {
  """
  startTime
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  startTime: String!

  """
  endTime
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  endTime: String!

  """
  quantity
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  quantity: Int!

  """
  subTotal
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  subTotal: Money!

  """
  grandTotal
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  grandTotal: Money!

  """
   promo code adjustments
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  adjustments: [Adjustments!]

  """
   taxes
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  taxes: [Tax!]

  """
  fulfillmentId
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  fulfillmentId: ID

  """
  The shared workspace for the quote
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  sharedWorkspace: SharedWorkspace!
}

"""
Number of available and total seats for a given date
GraphMeta: {
 "release": "1.7.0"
}
"""
type SharedWorkspaceSeats {
  """
  Total number of seats for the shared workspace
  GraphMeta: {
   "release": "1.7.0"
  }
  """
  total: Int!

  """
  Available number of seats for the shared workspace for the passed-in date
  GraphMeta: {
   "release": "1.7.0"
  }
  """
  available: Int!
}

"""Sort order parameters for shared workspaces."""
enum SharedWorkspaceSortOrder {
  LOCATION_NAME
  CAPACITY
  CAPACITY_DESC
  CREDITS
  CREDITS_DESC
}

"""
Tax details
GraphMeta: {
 "release": "1.0.0"
}
"""
type Tax {
  """
  tax uuid
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  id: ID!

  """
  tax amount
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  amount: Float!

  """
  currency code
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  currency: String!

  """
  tax description(e.g."3.5%")
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  description: String!

  """
  tax name(e.g.   "VAT")
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  name: String!
}

"""
TimeFilterInput
GraphMeta: {
 "release": "1.0.0"
}
"""
input TimeFilterInput {
  """
  When an additional filter starts, only permitted with min_availability and window_end_time filters. Try to use only on half-hour blocks. Use ISO formatted DateTimes and IANA timezones to prevent surprises.
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  startTime: String!

  """
  When an additional filter starts, only permitted with min_availability and window_start_time filters. Try to use only on half-hour blocks. Use ISO formatted DateTimes and IANA timezones to prevent surprises.
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  endTime: String

  """
  Minimum interval in minutes that the room must be available for. Add window_start_time and window_end_time parameters to get rooms available for at least 60 minutes within the window between window_start_time and window_end_time. Only permitted with window_start_time and window_end_time filters.
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  duration: Int!
}

"""Enum representing the type of a reservable."""
enum TimeUnit {
  MINUTE
  HOUR
  DAY
  VARIABLE
}

"""
Update booking result
GraphMeta: {
 "release": "1.4.0"
}
"""
type UpdateBookingResult implements MutationResult {
  """
  Represents if this mutation was executed successfully or not
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  isSuccess: Boolean!

  """
  Represents if this mutation was executed successfully or not
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  errors: [MutationError!]

  """
  The booking as updated
  GraphMeta: {
   "release": "1.4.0"
  }
  """
  result: Booking
}

"""
Represents the federated user entity
GraphMeta: {
 "release": "1.0.0"
}
"""
type User @extends @key(fields: "id") {
  """
  ID for this user
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  id: ID! @external
}

"""
UserActionDetail
GraphMeta: {
 "release": "1.1.0"
}
"""
type UserActionDetail {
  """
  action identifier
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  actionIdentifier: String!

  """
  redirect url
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  redirectUrl: String!

  """
  stripe payment intent client secret
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  stripePaymentIntentSecret: String!
}

"""
WeeklySchedule
GraphMeta: {
 "release": "10.0.0"
}
"""
input WeeklySchedule {
  """
  day
  GraphMeta: {
   "release": "10.0.0"
  }
  """
  day: String!

  """
  open
  GraphMeta: {
   "release": "10.0.0"
  }
  """
  open: String!

  """
  close
  GraphMeta: {
   "release": "10.0.0"
  }
  """
  close: String!
}
