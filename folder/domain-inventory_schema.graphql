"""
Common pagination result type
GraphMeta: {
 "release": "1.8.0"
}
"""
type PaginationResult {
  """
  Number of pages skipped
  GraphMeta: {
   "release": "1.8.0"
  }
  """
  offset: Int

  """
  Maximum number of elements in the page result
  GraphMeta: {
   "release": "1.8.0"
  }
  """
  limit: Int

  """
  Total number of elements in the page result
  GraphMeta: {
   "release": "1.8.0"
  }
  """
  total: Int
}

"""
Represents the federated Location entity
GraphMeta: {
 "release": "1.8.0"
}
"""
type Location {
  """
  ID for this user
  GraphMeta: {
   "release": "1.8.0"
  }
  """
  id: ID!
}

"""
Physical properties of the space
GraphMeta: {
 "release": "1.8.0"
}
"""
type SpaceProperties {
  """
  Indicates whether or not the space has a window
  GraphMeta: {
   "release": "1.8.0"
  }
  """
  hasWindow: Boolean

  """
  The square footage of the space
  GraphMeta: {
   "release": "1.8.0"
  }
  """
  squareFootage: Float
}

"""
An image of an inventory item
GraphMeta: {
 "release": "1.8.0"
}
"""
type InventoryImage {
  """
  The URL of the image
  GraphMeta: {
   "release": "1.8.0"
  }
  """
  url: String
}

"""
Details about the product that is associated with the inventory item
GraphMeta: {
 "release": "1.8.0"
}
"""
type InventoryProduct {
  """
  The ID of the product
  GraphMeta: {
   "release": "1.8.0"
  }
  """
  id: ID!
}

"""
An amenity belonging to an inventory item. For example, a whiteboard
GraphMeta: {
 "release": "1.8.0"
}
"""
type InventoryAmenity {
  """
  The name of the amenity
  GraphMeta: {
   "release": "1.8.0"
  }
  """
  name: String
}

"""
A sellable unit of physical space
GraphMeta: {
 "release": "1.8.0"
}
"""
type InventoryItem {
  """
  ID of the inventory item
  GraphMeta: {
   "release": "1.8.0"
  }
  """
  id: ID!

  """
  The location the inventory item is located at
  GraphMeta: {
   "release": "1.8.0"
  }
  """
  location: Location

  """
  The last time the inventory item was updated, represented as an RFC 3339 date string
  GraphMeta: {
   "release": "1.8.0"
  }
  """
  updatedTime: String

  """
  The name of the inventory item, for example "3A"
  GraphMeta: {
   "release": "1.8.0"
  }
  """
  name: String

  """
  The product associated with the inventory item
  GraphMeta: {
   "release": "1.8.0"
  }
  """
  product: InventoryProduct

  """
  The amount of individuals this space can service
  GraphMeta: {
   "release": "1.8.0"
  }
  """
  capacity: Int

  """
  The maximum number of people that can have concurrent bookings in this space
  GraphMeta: {
   "release": "1.8.0"
  }
  """
  maxBookableCapacity: Int

  """
  The time at which the inventory item was, or will be, soft deleted,  represented as an RFC 3339 date string
  GraphMeta: {
   "release": "1.8.0"
  }
  """
  archivedTime: String

  """
  Images of this inventory item
  GraphMeta: {
   "release": "1.8.0"
  }
  """
  images: [InventoryImage!]

  """
  Amenities included in this inventory item
  GraphMeta: {
   "release": "1.8.0"
  }
  """
  amenities: [InventoryAmenity!]

  """
  Physical properties of the space
  GraphMeta: {
   "release": "1.8.0"
  }
  """
  spaceProperties: SpaceProperties
}

"""
Response from the getInventoryItems query
GraphMeta: {
 "release": "1.8.0"
}
"""
type InventoryItemResponse {
  """
  A list of inventory items
  GraphMeta: {
   "release": "1.8.0"
  }
  """
  inventoryItems: [InventoryItem!]!

  """
  The pagination information for this response
  GraphMeta: {
   "release": "1.8.0"
  }
  """
  pagination: PaginationResult!
}

type Query {
  """
  Gets an inventory item by id
  GraphMeta: {
   "release": "1.8.0",
   "acceptedTokenTypes": [
    "employee",
    "service"
   ]
  }
  """
  getInventoryItem(
    """The ID of the inventory item"""
    id: String!
  ): InventoryItem!

  """
  Gets inventory by the given filters
  GraphMeta: {
   "release": "1.8.0",
   "acceptedTokenTypes": [
    "employee",
    "service"
   ]
  }
  """
  getInventoryItems(
    """The input describing the inventory to search for"""
    input: GetInventoryItemsInput!
  ): InventoryItemResponse!
}

"""
Input defining criteria by which to search for inventory
GraphMeta: {
 "release": "1.8.0"
}
"""
input GetInventoryItemsInput {
  """
  Pagination parameters
  GraphMeta: {
   "release": "1.8.0"
  }
  """
  pagination: PaginationInput

  """
  Parameters by which to filter the result
  GraphMeta: {
   "release": "1.8.0"
  }
  """
  filter: InventoryItemsFilterInput
}

"""
Common pagination input type
GraphMeta: {
 "release": "1.0.0"
}
"""
input PaginationInput {
  """
  Number of elements to skip over when determining the start of a page.
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  offset: Int

  """
  Number of elements in a page
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  limit: Int
}

"""
Filters describing how to fetch the inventory
GraphMeta: {
 "release": "1.8.0"
}
"""
input InventoryItemsFilterInput {
  """
  A filter signifying that only inventory updated past the given time should be included, represented as an RFC 3339 date string (e.g., '2022-06-01T17:00:00Z')
  GraphMeta: {
   "release": "1.8.0"
  }
  """
  minUpdatedTime: String

  """
  The list of inventory IDs to fetch
  GraphMeta: {
   "release": "1.8.0"
  }
  """
  ids: [ID!]
}