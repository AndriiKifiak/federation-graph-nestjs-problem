"""
Represents the federated user entity
GraphMeta: {
 "release": "1.1.0"
}
"""
type User {
  """
  User ID
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  id: ID!
}

"""
WeWork Location
GraphMeta: {
 "release": "1.1.0"
}
"""
type Location {
  """
  Location ID
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  id: ID!
}

"""
Represents the Physical Access Assignment between a user and location
GraphMeta: {
 "release": "1.0.0"
}
"""
type PhysicalAccessAssignment {
  """
  Access Assignment UUID
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  assignmentId: ID!

  """
  User associated with the access assignment
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  user: User!

  """
  Location associated with the access assignment
  GraphMeta: {
   "release": "1.1.0"
  }
  """
  location: Location!

  """
  Inventory item ID for the space (office, etc) that the user needs access to. When not included, only building access will be granted
  GraphMeta: {
   "release": "1.6.2"
  }
  """
  inventoryItemId: ID

  """
  RFC3339 formatted datestring representing the start time associated with the access assignment
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  startTime: String

  """
  RFC3339 formatted datestring representing the end time associated with the access assignment
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  endTime: String

  """
  Status associated with the Physical Access Assignment request
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  status: PhysicalAccessAssignmentStatus!

  """
  User ID associated with the access assignment
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  userId: ID! @deprecated(reason: "This field has been replaced with a federated object")

  """
  Location ID associated with the access assignment
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  locationId: ID! @deprecated(reason: "This field has been replaced with a federated object")
}

"""Status of a given physical access assignment"""
enum PhysicalAccessAssignmentStatus {
  PENDING
  STARTING
  STARTED
  ENDING
  ENDED
  FAILED_TO_REMOVE
  FAILED_TO_ASSIGN
}

"""
Represents the result of the Physical Access Assignment Removal mutation
GraphMeta: {
 "release": "1.0.0"
}
"""
type RemovePhysicalAccessAssignmentResult implements MutationResult {
  """
  Represents if this mutation was executed successfully or not
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  isSuccess: Boolean!

  """
  Represents if this mutation was executed successfully or not
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  errors: [MutationError!]
}

"""Represents the result of a mutation"""
interface MutationResult {
  """
  Represents if this mutation was executed successfully or not
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  isSuccess: Boolean!

  """
  Represents if this mutation was executed successfully or not
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  errors: [MutationError!]
}

"""
Represents an error that may have occurred during this mutation
GraphMeta: {
 "release": "1.0.0"
}
"""
type MutationError {
  """
  The error message
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  message: String!

  """
  The error code representing this error
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  code: String

  """
  Represents which system this error originated from
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  service: String

  """
  Shows more details of the error, such as what field is at error state and what is the issue
  GraphMeta: {
   "release": "1.6.0"
  }
  """
  details: String
}

"""
The result of the createPhysicalAccessAssignment mutation
GraphMeta: {
 "release": "1.0.0"
}
"""
type CreatePhysicalAccessAssignmentResult implements MutationResult {
  """
  Represents if this mutation was executed successfully or not
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  isSuccess: Boolean!

  """
  Represents if this mutation was executed successfully or not
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  errors: [MutationError!]

  """
  The created physical access assignment
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  result: PhysicalAccessAssignment
}

type Query {
  """
  Get the physical access assignments by filter
  GraphMeta: {
   "release": "1.0.0",
   "acceptedTokenTypes": [
    "employee",
    "service"
   ]
  }
  """
  getPhysicalAccessAssignments(
    """Filtering inputs for access assignments"""
    input: GetPhysicalAccessAssignmentInput!
  ): [PhysicalAccessAssignment!]!
}

"""
Get Physical Access Assignments Input
GraphMeta: {
 "release": "1.0.0"
}
"""
input GetPhysicalAccessAssignmentInput {
  """
  User Id to filter assignments by
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  userId: ID
}

type Mutation {
  """
  Removes access level from a user for a given location.
  GraphMeta: {
   "release": "1.0.0",
   "acceptedTokenTypes": [
    "employee",
    "service"
   ]
  }
  """
  doRemovePhysicalAccessAssignment(
    """Input necessary to remove access assignment from a user."""
    input: RemovePhysicalAccessAssignmentInput!
  ): RemovePhysicalAccessAssignmentResult!

  """
  Assign access for a given user and location.
  GraphMeta: {
   "release": "1.0.0",
   "acceptedTokenTypes": [
    "employee",
    "service"
   ]
  }
  """
  doCreatePhysicalAccessAssignment(
    """Input necessary to assign access to a given user and location."""
    input: CreatePhysicalAccessAssignmentInput!
  ): CreatePhysicalAccessAssignmentResult!
}

"""
Remove Physical Access Assignment Input
GraphMeta: {
 "release": "1.0.0"
}
"""
input RemovePhysicalAccessAssignmentInput {
  """
  Assignment ID to be deleted. Status must still be PENDING.
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  assignmentId: ID!
}

"""
Input object for creating an access assignment between a user and location
GraphMeta: {
 "release": "1.0.0"
}
"""
input CreatePhysicalAccessAssignmentInput {
  """
  User UUID who will be assigned the Physical Access Assignment
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  userId: ID!

  """
  Location ID associated with the Physical Access Level Assignment
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  locationId: ID!

  """
  Inventory item ID for the space (office, etc) that the user needs access to. When not included, only building access will be granted
  GraphMeta: {
   "release": "1.6.2"
  }
  """
  inventoryItemId: ID

  """
  RFC3339 formatted datestring representing the start time associated with the access level assignment
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  startTime: String

  """
  RFC3339 formatted datestring representing the end time associated with the access level assignment
  GraphMeta: {
   "release": "1.0.0"
  }
  """
  endTime: String
}